OUTLINE

start .                         | go to gui of location you are in terminal
git status                      | status of git
git add <docname>               | add docname to staging point
git add .                       | add all docs to staging point
git commit                      | commits all staging point docs to commit, write in file that pops up then save and quit
git commit -m "<message>"       | commits all staging point docs to commit, with the message
git commit -a -m "<msg>"        | git add . and commit with a message
git --amend                     | edit the the last commit or add new file to the last commit
git branch                      | shows what branch you are one
git branch <branch Name>        | no spaces makes a branch does not switch to branch
git switch <branch Name>        | switch to the the branch name you wish to be on
git switch -c <branch name>     | create branch and switch to that branch all in one go
git branch -D <branch name>     | force delete a branch. need to be on another branch
git branch -d <branch name>     | delete branch must merge branch first
git branch -m <new name>        | make branch new name. need to be on the branch
git merge <branch name>         | merge branch name to master branch. be on the master branch when you merge
git diff                        | show the difference between the last save unstaged
git diff HEAD                   | differnce between last commit staged and unstaged
git diff --staged               | differences between only staged files
git diff --cached               | differences between only staged files
git diff --staged <file name>   | differences between only staged file name
git diff <branch1> <branch2>    | differnec between branch1 and branch2
git diff <commit1> <commit2>    | difference between two commits
git diff HEAD HEAD~1            | differnce between head and the previous head ~<how many steps back>
git stash                       | save files without commiting when switcing to branch that has conflicts
git stash pop                   | saved file pops back after command is written on correct branch allowing for commit later on
git stash apply                 | saved file can be applyed back to where they belong but they still stay stashed and can be applied to more than one branch
git stash list                  | list of stashes
git checkout <commit-hash>      | check out other commits
git checkout head~<steps back>  | check out commits so many steps back from where the head is
git switch -                    | take me back to last branch
git checkout head <doc name>    | revert changes on the doc type back to the last head spot
git checkout -- <doc name>      | revert changes on the doc type back to the last head spot
git restore <doc name>          | revert changes on the doc type back to the last head spot
git restore --staged <doc name> | unstage a file that you have added 
